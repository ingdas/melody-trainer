import {create} from "zustand/index";
import Scale from "../src/model/Scale";
import InstrumentSettings from "../src/model/InstrumentSettings";
import Melody from "../src/model/Melody";
import {Dimensions} from "react-native";

export const useStore = create((set) => ({
    tonic: 'C4',
    setTonic: (newTonic) => set({tonic: newTonic}),
    selectedScaleType: 'Diatonic',
    setSelectedScaleType: (newScaleType) => set({selectedScaleType: newScaleType}),
    selectedMode: 'I. Ionian (Major)',
    setSelectedMode: (newMode) => set({selectedMode: newMode}),
    scaleRange: 12,
    setScaleRange: (newRange) => set({scaleRange: newRange}),
    selectedInterval: 'Octave',
    setSelectedInterval: (newInterval) => set({selectedInterval: newInterval}),
    scale: Scale.defaultScale(),
    setScale: (newScale) => set({scale: newScale}),
    trebleInstrumentSettings: InstrumentSettings.defaultTrebleInstrumentSettings(),
    setTrebleInstrumentSettings: (newSettings) => set({trebleInstrumentSettings: newSettings}),
    bassInstrumentSettings: InstrumentSettings.defaultBassInstrumentSettings(),
    setBassInstrumentSettings: (newSettings) => set({bassInstrumentSettings: newSettings}),
    percussionInstrumentSettings: InstrumentSettings.defaultPercussionInstrumentSettings(),
    setPercussionInstrumentSettings: (newSettings) => set({percussionInstrumentSettings: newSettings}),
    metronomeInstrumentSettings: InstrumentSettings.defaultMetronomeInstrumentSettings(),
    setMetronomeInstrumentSettings: (newSettings) => set({metronomeInstrumentSettings: newSettings}),
    trebleMelody: Melody.defaultTrebleMelody(),
    setTrebleMelody: (newMelody) => set({trebleMelody: newMelody}),
    bassMelody: Melody.defaultBassMelody(),
    setBassMelody: (newMelody) => set({bassMelody: newMelody}),
    percussionMelody: Melody.defaultPercussionMelody(),
    setPercussionMelody: (newMelody) => set({percussionMelody: newMelody}),
    metronomeMelody: Melody.defaultMetronomeMelody(),
    setMetronomeMelody: (newMelody) => set({metronomeMelody: newMelody}),
    bpm: 120,
    setBpm: (newBpm) => set({bpm: newBpm}),
    timeSignature: [4, 4],
    setTimeSignature: (newTimeSignature) => set({timeSignature: newTimeSignature}),
    numMeasures: 2,
    setNumMeasures: (newNumMeasures) => set({numMeasures: newNumMeasures}),
    isPlayingContinuously: false,
    setIsPlayingContinuously: (newStatus) => set({isPlayingContinuously: newStatus}),
    stopPlayback: false,
    setStopPlayback: (newStatus) => set({stopPlayback: newStatus}),
    screenWidth: Dimensions.get('window').width,
    setScreenWidth: (newWidth) => set({screenWidth: newWidth}),
    // Modal visibility states
    isTonicModalVisible: false,
    setIsTonicModalVisible: (isVisible) => set({isTonicModalVisible: isVisible}),
    isScaleTypeModalVisible: false,
    setIsScaleTypeModalVisible: (isVisible) => set({isScaleTypeModalVisible: isVisible}),
    isModeModalVisible: false,
    setIsModeModalVisible: (isVisible) => set({isModeModalVisible: isVisible}),
    isIntervalModalVisible: false,
    setIsIntervalModalVisible: (isVisible) => set({isIntervalModalVisible: isVisible}),
}));